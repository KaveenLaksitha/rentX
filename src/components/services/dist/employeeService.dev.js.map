{"version":3,"sources":["employeeService.js"],"names":["HOST","addEmployeeService","employeePayload","console","log","axios","post","ok","err","response","data","status","updateEmployeeService","empId","put","getAllEmployeesService","get","deleteEmployeeService","reason","addInquiry","getAllPastEmployeesService","searchEmployeesService","input","searchPastEmployeesService","params","type","getAllEmployeesServiceCount"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst HOST = \"http://localhost:4000\";\r\n\r\n//for add an employee\r\nexport const addEmployeeService = async (employeePayload) => {\r\n  console.log(employeePayload, \"<<<<<<<<<<<<<<<<<<<<<<<<\");\r\n  try {\r\n    await axios.post(`${HOST}/api/employee`, employeePayload);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for add an employee\r\nexport const updateEmployeeService = async (empId, employeePayload) => {\r\n  console.log(empId, \"updateeee<<<<<<<<<<<<<<<<<<<<<<<<\");\r\n  console.log(\"update payloaddddddddd\", employeePayload);\r\n\r\n  try {\r\n    await axios.put(`${HOST}/api/updateEmployee/${empId}`, employeePayload);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for retrive the all employee records\r\nexport const getAllEmployeesService = async () => {\r\n  console.log(\"done;\");\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/employee`);\r\n    console.log(\"response came\", response);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n//for delete an employee and add him/her to past employee collection\r\nexport const deleteEmployeeService = async (data, reason) => {\r\n\r\n  console.log(data, \"<<<<<<<<<<<<<<<<deleteeeeeeee\");\r\n  console.log(reason, \"<<<<<<<<<<<<<<<<deleteeeeeeee reasonnnnnn\");\r\n\r\n  try {\r\n    await axios.post(`${HOST}/api/resignation`, { reason, ...data });\r\n    const response = await axios.post(`${HOST}/api/removeEmployee`, data);\r\n    if (response) {\r\n      return {\r\n        ok: true,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n\r\n};\r\n\r\n//for make an inquiry\r\nexport const addInquiry = async (data) => {\r\n  console.log(data, \"<<<<<<<<<<<<<<<<<<<<<<<<\");\r\n  try {\r\n    await axios.post(\"https://getform.io/f/d5448fa8-dff5-4ce0-a927-7ec55756f5a4\", data);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for get all the past employee records\r\nexport const getAllPastEmployeesService = async () => {\r\n  console.log(\"done;\");\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/pastEmployees`);\r\n    console.log(\"response came\", response);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\nexport const searchEmployeesService = async (input) => {\r\n\r\n  console.log(\"data for searchhh>>>>>>>\", input)\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/searchEmployees/${input}`);\r\n    console.log(\"response came for search\", response);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\nexport const searchPastEmployeesService = async (input) => {\r\n\r\n  console.log(\"data for searchhh>>>>>>>\", input)\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/searchEmployees/${input}`, { params: { type: \"pastEmp\" } });\r\n    console.log(\"response came for search\", response);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n\r\n//for retrive the all employee records\r\nexport const getAllEmployeesServiceCount = async () => {\r\n  console.log(\"done;\");\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/EmployeeAvailable`);\r\n    console.log(\"response came\", response);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};"],"file":"employeeService.dev.js"}