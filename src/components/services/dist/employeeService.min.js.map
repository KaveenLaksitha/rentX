{"version":3,"sources":["employeeService.js"],"names":["_axios","_interopRequireDefault","require","HOST","addEmployeeService","employeePayload","regeneratorRuntime","async","_context","prev","next","console","log","awrap","axios","post","concat","abrupt","ok","t0","err","response","data","status","stop","updateEmployeeService","empId","_context2","put","getAllEmployeesService","_context3","get","sent","deleteEmployeeService","reason","_context4","_objectSpread","addInquiry","_context5","getAllPastEmployeesService","_context6","searchEmployeesService","input","_context7","searchPastEmployeesService","_context8","params","type","getAllEmployeesServiceCount","_context9"],"mappings":"6VAAA,IAAAA,OAAAC,uBAAAC,QAAA,6yBAEA,IAAMC,KAAO,wBAGAC,mBAAqB,SAAOC,GAAP,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAChCC,QAAQC,IAAIP,EAAiB,4BADGG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAO,MAGxBC,OAAAA,QAAMC,KAAN,GAAAC,OAAcb,KAAd,iBAAmCE,IAHX,KAAA,EAAA,OAAAG,EAAAS,OAAA,SAIvB,CACLC,IAAI,IALwB,KAAA,EAAA,OAAAV,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,MAAA,GAAAA,EAAAS,OAAA,SAQvB,CACLC,IAAI,EAAOE,IAAKZ,EAAAW,GAAME,SAASC,KAAKC,SATR,KAAA,GAAA,IAAA,MAAA,OAAAf,EAAAgB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,oDAAA,IAAAC,sBAAA,SAAAC,EAAArB,GAAA,OAAAC,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAC,QAAAC,IAAAc,EAAA,qCAAAf,QAAAC,IAAA,yBAAAP,GAAAsB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAAAJ,mBAAAO,MAAAC,OAAAA,QAAAc,IAAA,GAAAZ,OAAAb,KAAA,wBAAAa,OAAAU,GAAArB,IAAA,KAAA,EAAA,OAAAsB,EAAAV,OAAA,SAAA,CAAAC,IAAA,IAAA,KAAA,EAAA,OAAAS,EAAAlB,KAAA,EAAAkB,EAAAR,GAAAQ,EAAA,MAAA,GAAAA,EAAAV,OAAA,SAAA,CAK5BC,IAAAA,EAAIE,IAAAO,EAAAR,GAAAE,SAAAC,KAAAC,SALwB,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,0DAAA,IAAAK,uBAAA,WAAA,IAAAR,EAAA,OAAAf,mBAAAC,MAAA,SAAAuB,GAAA,OAAA,OAAAA,EAAArB,KAAAqB,EAAApB,MAAA,KAAA,EAAA,OAS5BQ,QAAAA,IAAE,SAT0BY,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAAAJ,mBAAAO,MAAAC,OAAAA,QAAAiB,IAAA,GAAAf,OAAAb,KAAA,mBAAA,KAAA,EAAA,OAQvBkB,EARuBS,EAAAE,KAoC9BrB,QAAQC,IAAI,gBAAiBS,GApCCS,EAAAb,OAAA,SAAA,CAAAC,IAAA,EAAAI,KAAAD,EAAAC,KAAAA,OAAA,KAAA,EAAA,OAAAQ,EAAArB,KAAA,EAAAqB,EAAAX,GAAAW,EAAA,MAAA,GAAAA,EAAAb,OAAA,SAAA,CAclCC,IAAA,IAdkC,KAAA,GAAA,IAAA,MAAA,OAAAY,EAAAN,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,4DAeG,IAAAS,sBAAA,SAAAX,EAAAY,GAAA,OAAA5B,mBAAAC,MAAA,SAAA4B,GAAA,OAAA,OAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,KAAA,EAAA,OAAAC,QAAAC,IAAAU,EAAA,iCAAAX,QAAAC,IAAAsB,EAAA,6CAAAC,EAAA1B,KAAA,EAAA0B,EAAAzB,KAAA,EAAAJ,mBAAAO,MAAAC,OAAAA,QAAAC,KAAA,GAAAC,OAAAb,KAAA,oBAAAiC,cAAA,CAAAF,OAAAA,GAAAZ,KAAA,KAAA,EAAA,OAAAa,EAAAzB,KAAA,EAAAJ,mBAAAO,MAAAC,OAAAA,QAAAC,KAAA,GAAAC,OAAAb,KAAA,uBAAAmB,IAAA,KAAA,EAAA,GAAAa,EAAAH,KAAA,OAAAG,EAAAlB,OAAA,SA2CxB,CA3CwBC,IAAA,IAAAiB,EAAAzB,KAAA,GAAA,MAAA,KAAA,GAAAyB,EAAAzB,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAyB,EAAA1B,KAAA,GAAA0B,EAAAhB,GAAAgB,EAAA,MAAA,GAAAA,EAAAlB,OAAA,SAgD1B,CAhD0BC,IAAA,EAAAE,IAAAe,EAAAhB,GAAAE,SAAAC,KAAAC,SAAA,KAAA,GAAA,IAAA,MAAA,OAAAY,EAAAX,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,2DAwD9B,IAAMa,WAAa,SAAOf,GAAP,OAAAhB,mBAAAC,MAAA,SAAA+B,GAAA,OAAA,OAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,KAAA,EAAA,OAxDWC,QAAAC,IAAAU,EAAA,4BAwDXgB,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAAAJ,mBAAAO,MAxDWC,OAAAA,QAAAC,KAAA,4DAAAO,IAwDX,KAAA,EAAA,OAAAgB,EAAArB,OAAA,SAxDW,CAAAC,IAAA,IAwDX,KAAA,EAAA,OAAAoB,EAAA7B,KAAA,EAAA6B,EAAAnB,GAAAmB,EAAA,MAAA,GAAAA,EAAArB,OAAA,SAQf,CACLC,IAAI,EAAOE,IAAKkB,EAAAnB,GAAME,SAASC,KAAKC,SAThB,KAAA,GAAA,IAAA,MAAA,OAAAe,EAAAd,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,oCAvCY,IAAAe,2BAAA,WAAA,IAAAlB,EAAA,OAAAf,mBAAAC,MAAA,SAAAiC,GAAA,OAAA,OAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,KAAA,EAAA,OAAAC,QAAAC,IAAA,SAAA4B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAAAJ,mBAAAO,MACxBC,OAAAA,QAAZiB,IAAY,GAAAf,OAAZb,KAAY,wBADwB,KAAA,EAAA,OACpCQ,EADoC6B,EAAAR,KAAArB,QAAAC,IAAA,gBAAAS,GAAAmB,EAAAvB,OAAA,SAAA,CAAAC,IAAA,EA6DhCI,KAAMD,EAASC,KAAKA,OA7DY,KAAA,EAAA,OAAAkB,EAAA/B,KAAA,EAAA+B,EAAArB,GAAAqB,EAAA,MAAA,GAAAA,EAAAvB,OAAA,SAIlCN,CAJkCO,IAAA,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAsB,EAAAhB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,oEAAA,IAAAiB,uBAAA,SAAAC,GAAA,IAAArB,EAAA,OAAAf,mBAAAC,MAAA,SAAAoC,GAAA,OAAA,OAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,KAAA,EAAA,OAAAC,QAAAC,IAAA,2BAAA8B,GAAAC,EAAAlC,KAAA,EAAAkC,EAAAjC,KAAA,EAAAJ,mBAAAO,MAW5BC,OAAAA,QAAAiB,IAAA,GAAAf,OAAAb,KAAA,yBAAAa,OAAA0B,KAX4B,KAAA,EAAA,OAWhCxB,EAXgCyB,EAAAX,KAU3BrB,QAV2BC,IAAA,2BAAAS,GAAAsB,EAAA1B,OAAA,SA4E3B,CA5E2BC,IAAA,EAAAI,KAAAD,EAAAC,KAAAA,OAAA,KAAA,EAAA,OAAAqB,EAAAlC,KAAA,EAAAkC,EAAAxB,GAAAwB,EAAA,MAAA,GAAAA,EAAA1B,OAAA,SAAA,CAAAC,IAAA,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAyB,EAAAnB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,4DAuF/B,IAAMoB,2BAA6B,SAAOF,GAAP,IAAArB,EAAA,OAAAf,mBAAAC,MAAA,SAAAsC,GAAA,OAAA,OAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,KAAA,EAAA,OAtELC,QAAAC,IAAA,2BAAA8B,GAsEKG,EAAApC,KAAA,EAAAoC,EAAAnC,KAAA,EAAAJ,mBAAAO,MAtELC,OAAAA,QAAAiB,IAAA,GAAAf,OAAAb,KAAA,yBAAAa,OAAA0B,GAAA,CAAAI,OAAA,CAAAC,KAAA,cAsEK,KAAA,EAAA,OAtEL1B,EAsEKwB,EAAAb,KAtELrB,QAAAC,IAAA,2BAAAS,GAsEKwB,EAAA5B,OAAA,SAtEL,CAEnCN,IAAAA,EACAA,KAAAA,EAAAW,KAAYY,OAmE4B,KAAA,EAAA,OAAAW,EAAApC,KAAA,EAAAoC,EAAA1B,GAAA0B,EAAA,MAAA,GAAAA,EAAA5B,OAAA,SAtEL,CAMaiB,IAAAA,IAgER,KAAA,GAAA,IAAA,MAAA,OAAAW,EAAArB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,oEAtEL,IAAAwB,4BAAA,WAAA,IAAA3B,EAAA,OAAAf,mBAAAC,MAAA,SAAA0C,GAAA,OAAA,OAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,KAAA,EAAA,OAO3BW,QAAAA,IAAAA,SAP2B4B,EAAAxC,KAAA,EAAAwC,EAAAvC,KAAA,EAAAJ,mBAAAO,MAAAC,OAAAA,QAAAiB,IAAA,GAAAf,OAAAb,KAAA,4BAAA,KAAA,EAAA,OAAAkB,EAAA4B,EAAAjB,KAAArB,QAAAC,IAAA,gBAAAS,GAAA4B,EAAAhC,OAAA,SAAA,CAAAC,IAAA,EAgG/BI,KAAMD,EAASC,KAAKA,OAhGW,KAAA,EAAA,OAAA2B,EAAAxC,KAAA,EAAAwC,EAAA9B,GAAA8B,EAAA,MAAA,GAAAA,EAAAhC,OAAA,SAAA,CAoG/BC,IAAI,IApG2B,KAAA,GAAA,IAAA,MAAA,OAAA+B,EAAAzB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"employeeService.min.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst HOST = \"http://localhost:4000\";\r\n\r\n//for add an employee\r\nexport const addEmployeeService = async (employeePayload) => {\r\n  console.log(employeePayload, \"<<<<<<<<<<<<<<<<<<<<<<<<\");\r\n  try {\r\n    await axios.post(`${HOST}/api/employee`, employeePayload);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for add an employee\r\nexport const updateEmployeeService = async (empId, employeePayload) => {\r\n  console.log(empId, \"updateeee<<<<<<<<<<<<<<<<<<<<<<<<\");\r\n  console.log(\"update payloaddddddddd\", employeePayload);\r\n\r\n  try {\r\n    await axios.put(`${HOST}/api/updateEmployee/${empId}`, employeePayload);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for retrive the all employee records\r\nexport const getAllEmployeesService = async () => {\r\n  console.log(\"done;\");\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/employee`);\r\n    console.log(\"response came\", response);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n//for delete an employee and add him/her to past employee collection\r\nexport const deleteEmployeeService = async (data, reason) => {\r\n\r\n  console.log(data, \"<<<<<<<<<<<<<<<<deleteeeeeeee\");\r\n  console.log(reason, \"<<<<<<<<<<<<<<<<deleteeeeeeee reasonnnnnn\");\r\n\r\n  try {\r\n    await axios.post(`${HOST}/api/resignation`, { reason, ...data });\r\n    const response = await axios.post(`${HOST}/api/removeEmployee`, data);\r\n    if (response) {\r\n      return {\r\n        ok: true,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n\r\n};\r\n\r\n//for make an inquiry\r\nexport const addInquiry = async (data) => {\r\n  console.log(data, \"<<<<<<<<<<<<<<<<<<<<<<<<\");\r\n  try {\r\n    await axios.post(\"https://getform.io/f/d5448fa8-dff5-4ce0-a927-7ec55756f5a4\", data);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for get all the past employee records\r\nexport const getAllPastEmployeesService = async () => {\r\n  console.log(\"done;\");\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/pastEmployees`);\r\n    console.log(\"response came\", response);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\nexport const searchEmployeesService = async (input) => {\r\n\r\n  console.log(\"data for searchhh>>>>>>>\", input)\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/searchEmployees/${input}`);\r\n    console.log(\"response came for search\", response);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\nexport const searchPastEmployeesService = async (input) => {\r\n\r\n  console.log(\"data for searchhh>>>>>>>\", input)\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/searchEmployees/${input}`, { params: { type: \"pastEmp\" } });\r\n    console.log(\"response came for search\", response);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n\r\n//for retrive the all employee records\r\nexport const getAllEmployeesServiceCount = async () => {\r\n  console.log(\"done;\");\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/EmployeeAvailable`);\r\n    console.log(\"response came\", response);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};"]}