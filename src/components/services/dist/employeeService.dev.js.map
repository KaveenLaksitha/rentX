{"version":3,"sources":["employeeService.js"],"names":["HOST","addEmployeeService","employeePayload","axios","post","ok","err","response","data","status","updateEmployeeService","empId","put","getAllEmployeesService","get","deleteEmployeeService","reason","addInquiry","getAllPastEmployeesService","searchEmployeesService","input","searchPastEmployeesService","params","type","searchForReport","payload","designation","ageFrom","ageTo","gender"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\n// const HOST = \"https://rent-x-api.herokuapp.com\";\r\nconst HOST = \"https://rent-x-api.herokuapp.com\";\r\n\r\n\r\n//for add an employee\r\nexport const addEmployeeService = async (employeePayload) => {\r\n  try {\r\n    await axios.post(`${HOST}/api/employee`, employeePayload);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for update an employee\r\nexport const updateEmployeeService = async (empId, employeePayload) => {\r\n  try {\r\n    await axios.put(`${HOST}/api/updateEmployee/${empId}`, employeePayload);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for retrive the all employee records\r\nexport const getAllEmployeesService = async () => {\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/employee`);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n//for delete an employee and add him/her to past employee collection\r\nexport const deleteEmployeeService = async (data, reason) => {\r\n\r\n  try {\r\n    await axios.post(`${HOST}/api/resignation`, { reason, ...data });\r\n    const response = await axios.post(`${HOST}/api/removeEmployee`, data);\r\n    if (response) {\r\n      return {\r\n        ok: true,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n\r\n};\r\n\r\n//for make an inquiry\r\nexport const addInquiry = async (data) => {\r\n  try {\r\n    await axios.post(\"https://getform.io/f/d5448fa8-dff5-4ce0-a927-7ec55756f5a4\", data);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for get all the past employee records\r\nexport const getAllPastEmployeesService = async () => {\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/pastEmployees`);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n//for search on resigned employees\r\nexport const searchEmployeesService = async (input) => {\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/searchEmployees/${input}`);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n//for search on resigned employees\r\nexport const searchPastEmployeesService = async (input) => {\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/searchEmployees/${input}`, { params: { type: \"pastEmp\" } });\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n// for generate report on employee\r\nexport const searchForReport = async (payload) => {\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/employeeReport/${payload.designation}/${payload.ageFrom}/${payload.ageTo}/${payload.gender}`);\r\n    if (!response.data.ok) {\r\n      return {\r\n        ok: false,\r\n      };\r\n    }\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};"],"file":"employeeService.dev.js"}