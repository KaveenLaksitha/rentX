{"version":3,"sources":["employeeService.js"],"names":["_axios","_interopRequireDefault","require","HOST","addEmployeeService","employeePayload","regeneratorRuntime","async","_context","prev","next","awrap","axios","post","concat","abrupt","ok","t0","err","response","data","status","stop","updateEmployeeService","empId","_context2","put","getAllEmployeesService","_context3","get","sent","deleteEmployeeService","reason","_context4","addInquiry","_context5","getAllPastEmployeesService","_context6","searchEmployeesService","input","_context7","searchPastEmployeesService","_context8","params","type","searchForReport","payload","_context9"],"mappings":"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","file":"employeeService.min.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// const HOST = \"https://rent-x-api.herokuapp.com\";\r\nconst HOST = \"https://rent-x-api.herokuapp.com\";\r\n\r\n\r\n//for add an employee\r\nexport const addEmployeeService = async (employeePayload) => {\r\n  try {\r\n    await axios.post(`${HOST}/api/employee`, employeePayload);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for update an employee\r\nexport const updateEmployeeService = async (empId, employeePayload) => {\r\n  try {\r\n    await axios.put(`${HOST}/api/updateEmployee/${empId}`, employeePayload);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for retrive the all employee records\r\nexport const getAllEmployeesService = async () => {\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/employee`);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n//for delete an employee and add him/her to past employee collection\r\nexport const deleteEmployeeService = async (data, reason) => {\r\n\r\n  try {\r\n    await axios.post(`${HOST}/api/resignation`, { reason, ...data });\r\n    const response = await axios.post(`${HOST}/api/removeEmployee`, data);\r\n    if (response) {\r\n      return {\r\n        ok: true,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n\r\n};\r\n\r\n//for make an inquiry\r\nexport const addInquiry = async (data) => {\r\n  try {\r\n    await axios.post(\"https://getform.io/f/d5448fa8-dff5-4ce0-a927-7ec55756f5a4\", data);\r\n    return {\r\n      ok: true,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false, err: error.response.data.status\r\n    };\r\n  }\r\n};\r\n\r\n//for get all the past employee records\r\nexport const getAllPastEmployeesService = async () => {\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/pastEmployees`);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n//for search on resigned employees\r\nexport const searchEmployeesService = async (input) => {\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/searchEmployees/${input}`);\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n//for search on resigned employees\r\nexport const searchPastEmployeesService = async (input) => {\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/searchEmployees/${input}`, { params: { type: \"pastEmp\" } });\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};\r\n\r\n// for generate report on employee\r\nexport const searchForReport = async (payload) => {\r\n  try {\r\n    const response = await axios.get(`${HOST}/api/employeeReport/${payload.designation}/${payload.ageFrom}/${payload.ageTo}/${payload.gender}`);\r\n    if (!response.data.ok) {\r\n      return {\r\n        ok: false,\r\n      };\r\n    }\r\n    return {\r\n      ok: true,\r\n      data: response.data.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      ok: false,\r\n    };\r\n  }\r\n};"]}